{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nimport counterReducer from '../features/counter/counterSlice';\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer\n  }\n});\n\nfunction todos() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return state.concat([action.text]);\n\n    default:\n      return state;\n  }\n}\n\nexport const storegrid = createStore((todos, ['Use Redux']));","map":{"version":3,"names":["configureStore","createStore","counterReducer","store","reducer","counter","todos","state","action","type","concat","text","storegrid"],"sources":["/Users/dewan03/my-app/src/app/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { createStore } from 'redux'\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nfunction todos(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return state.concat([action.text])\n    default:\n      return state\n  }\n}\nexport const storegrid = createStore((todos, ['Use Redux']))\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPC,OAAO,EAAEH;EADF;AADyB,CAAD,CAA5B;;AAMP,SAASI,KAAT,GAAmC;EAAA,IAApBC,KAAoB,uEAAZ,EAAY;EAAA,IAARC,MAAQ;;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,UAAL;MACE,OAAOF,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,IAAR,CAAb,CAAP;;IACF;MACE,OAAOJ,KAAP;EAJJ;AAMD;;AACD,OAAO,MAAMK,SAAS,GAAGX,WAAW,EAAEK,KAAK,EAAE,CAAC,WAAD,CAAT,EAA7B"},"metadata":{},"sourceType":"module"}